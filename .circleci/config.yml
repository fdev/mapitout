version: 2.1

orbs:
  aws-s3: circleci/aws-s3@1.0.9

jobs:
  build_backend:
    working_directory: /home/circleci/app/api
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout:
          path: /home/circleci/app
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1 \
              bash \
              jq \
              wget \
              curl
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76
      - run:
          name: Build Docker image
          command: |
            docker build --cache-from=docker -t docker .
      - deploy:
          name: Push Docker image
          command: |
            IMAGE_NAME="amsterdam-mapitout-backend"
            LOGIN="$(aws ecr get-login)"
            ${LOGIN}
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker tag docker "${ECR_ENDPOINT}/${IMAGE_NAME}:latest"
              docker push "${ECR_ENDPOINT}/${IMAGE_NAME}:latest"
            fi
            docker tag docker "${ECR_ENDPOINT}/${IMAGE_NAME}:${CIRCLE_BRANCH}"
            docker push "${ECR_ENDPOINT}/${IMAGE_NAME}:${CIRCLE_BRANCH}"
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              wget https://raw.githubusercontent.com/silinternational/ecs-deploy/master/ecs-deploy
              chmod +x ecs-deploy
              ./ecs-deploy -c Includable -n "${IMAGE_NAME}" -i "${ECR_ENDPOINT}/${IMAGE_NAME}:latest" -t 240
            fi

  build_frontend:
    working_directory: /home/circleci/app/web
    docker:
      - image: circleci/node:8.15.0
    steps:
      - checkout:
          path: /home/circleci/app
      - run: sudo apt-get install python-dev
      - run:
          name: Install dependencies
          command: |
            yarn
            echo "REACT_APP_API_BASE_URL=\"https://mapitout-api.internal.includable.com/api/\"\nREACT_APP_GOOGLE_MAPS_TOKEN=\"AIzaSyCKGAxENxVpDhER2eIJk9AiSclXNhkubpE\"" > .env
      - run:
          name: Build React app
          command: yarn build
      - aws-s3/sync:
          from: build
          to: 's3://mapitout.iamsterdam.com'
          arguments: --acl public-read --cache-control "max-age=86400"
          overwrite: true
      - run: aws cloudfront create-invalidation --distribution-id E5M144WQ6D3CE --paths /\*

workflows:
  version: 2
  workflow:
    jobs:
      - build_backend:
          context: includable-ecs
      - build_frontend:
          context: includable-ecs
          filters:
            branches:
              only: master
